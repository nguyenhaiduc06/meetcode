export const topicTags = [
  { tagName: "Array", questionCount: "1365" },
  { tagName: "String", questionCount: "609" },
  { tagName: "Hash Table", questionCount: "470" },
  { tagName: "Math", questionCount: "428" },
  { tagName: "Dynamic Programming", questionCount: "427" },
  { tagName: "Sorting", questionCount: "313" },
  { tagName: "Greedy", questionCount: "306" },
  { tagName: "Depth-First Search", questionCount: "272" },
  { tagName: "Binary Search", questionCount: "224" },
  { tagName: "Database", questionCount: "222" },
  { tagName: "Breadth-First Search", questionCount: "217" },
  { tagName: "Tree", questionCount: "213" },
  { tagName: "Matrix", questionCount: "194" },
  { tagName: "Two Pointers", questionCount: "170" },
  { tagName: "Binary Tree", questionCount: "169" },
  { tagName: "Bit Manipulation", questionCount: "159" },
  { tagName: "Heap (Priority Queue)", questionCount: "140" },
  { tagName: "Stack", questionCount: "139" },
  { tagName: "Prefix Sum", questionCount: "125" },
  { tagName: "Graph", questionCount: "125" },
  { tagName: "Design", questionCount: "123" },
  { tagName: "Simulation", questionCount: "117" },
  { tagName: "questionCounting", questionCount: "98" },
  { tagName: "Backtracking", questionCount: "95" },
  { tagName: "Sliding Window", questionCount: "85" },
  { tagName: "Union Find", questionCount: "75" },
  { tagName: "Linked List", questionCount: "70" },
  { tagName: "Ordered Set", questionCount: "54" },
  { tagName: "Monotonic Stack", questionCount: "49" },
  { tagName: "Enumeration", questionCount: "47" },
  { tagName: "Recursion", questionCount: "46" },
  { tagName: "Trie", questionCount: "44" },
  { tagName: "Divide and Conquer", questionCount: "44" },
  { tagName: "Binary Search Tree", questionCount: "40" },
  { tagName: "Bitmask", questionCount: "39" },
  { tagName: "Queue", questionCount: "39" },
  { tagName: "Number Theory", questionCount: "35" },
  { tagName: "Segment Tree", questionCount: "34" },
  { tagName: "Memoization", questionCount: "33" },
  { tagName: "Geometry", questionCount: "32" },
  { tagName: "Topological Sort", questionCount: "31" },
  { tagName: "Binary Indexed Tree", questionCount: "28" },
  { tagName: "Hash Function", questionCount: "25" },
  { tagName: "Game Theory", questionCount: "24" },
  { tagName: "Shortest Path", questionCount: "20" },
  { tagName: "Combinatorics", questionCount: "19" },
  { tagName: "Data Stream", questionCount: "18" },
  { tagName: "Interactive", questionCount: "18" },
  { tagName: "String Matching", questionCount: "18" },
  { tagName: "Rolling Hash", questionCount: "18" },
  { tagName: "Brainteaser", questionCount: "13" },
  { tagName: "Randomized", questionCount: "12" },
  { tagName: "Monotonic Queue", questionCount: "11" },
  { tagName: "Merge Sort", questionCount: "11" },
  { tagName: "Iterator", questionCount: "9" },
  { tagName: "Concurrency", questionCount: "9" },
  { tagName: "Doubly-Linked List", questionCount: "8" },
  { tagName: "Probability and Statistics", questionCount: "7" },
  { tagName: "Quickselect", questionCount: "7" },
  { tagName: "Bucket Sort", questionCount: "6" },
  { tagName: "Suffix Array", questionCount: "6" },
  { tagName: "Minimum Spanning Tree", questionCount: "5" },
  { tagName: "questionCounting Sort", questionCount: "5" },
  { tagName: "Shell", questionCount: "4" },
  { tagName: "Line Sweep", questionCount: "4" },
  { tagName: "Reservoir Sampling", questionCount: "4" },
  { tagName: "Eulerian Circuit", questionCount: "3" },
  { tagName: "Radix Sort", questionCount: "3" },
  { tagName: "Strongly Connected Component", questionCount: "2" },
  { tagName: "Rejection Sampling", questionCount: "2" },
  { tagName: "Biconnected Component", questionCount: "1" },
];

export const STUDY_PLANS = [
  {
    __typename: "StudyPlanBriefNode",
    cover: "https://assets.leetcode.com/study_plan_v2/top-interview-150/cover",
    highlight: "Must-do List for Interview Prep",
    name: "Top Interview 150",
    onGoing: false,
    premiumOnly: false,
    questionNum: 150,
    slug: "top-interview-150",
  },
  {
    __typename: "StudyPlanBriefNode",
    cover: "https://assets.leetcode.com/study_plan_v2/leetcode-75/cover",
    highlight: "Ace Coding Interview with 75 Qs",
    name: "LeetCode 75",
    onGoing: false,
    premiumOnly: false,
    questionNum: 75,
    slug: "leetcode-75",
  },
  {
    __typename: "StudyPlanBriefNode",
    cover: "https://assets.leetcode.com/study_plan_v2/top-sql-50/cover",
    highlight: "Crack SQL Interview in 50 Qs",
    name: "SQL 50",
    onGoing: false,
    premiumOnly: false,
    questionNum: 50,
    slug: "top-sql-50",
  },
  {
    __typename: "StudyPlanBriefNode",
    cover: "https://assets.leetcode.com/study_plan_v2/premium-algo-100/cover",
    highlight: "LeetCode Staff Pick",
    name: "Premium Algo 100",
    onGoing: false,
    premiumOnly: true,
    questionNum: 100,
    slug: "premium-algo-100",
  },
  {
    __typename: "StudyPlanBriefNode",
    cover: "https://assets.leetcode.com/study_plan_v2/premium-sql-50/cover",
    highlight: "50 Advanced SQL Problems",
    name: "Advanced SQL 50",
    onGoing: false,
    premiumOnly: true,
    questionNum: 50,
    slug: "premium-sql-50",
  },
  {
    __typename: "StudyPlanBriefNode",
    cover:
      "https://assets.leetcode.com/study_plan_v2/dynamic-programming/cover",
    highlight: "10 Essential DP Patterns",
    name: "Dynamic Programming",
    onGoing: false,
    premiumOnly: false,
    questionNum: 50,
    slug: "dynamic-programming",
  },
];
